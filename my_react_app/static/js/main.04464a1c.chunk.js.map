{"version":3,"sources":["CoursesList.js","Search.js","App.js","reportWebVitals.js","index.js"],"names":["CoursesList","courses","handleRemoveCourse","map","course","href","url","title","author","hours_video","number_of_lectures","rating","type","onClick","id","Search","value","onSearch","htmlFor","onChange","courses_data","coursesReducer","state","action","payload","filter","Error","App","useState","localStorage","getItem","searchText","setSearchText","useReducer","dispatchCourses","isLoading","setIsLoading","filteredCourses","includes","useEffect","setItem","Promise","resolve","setTimeout","then","result","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NA4BeA,G,MA1BK,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,mBAC7B,OAAOD,EAAQE,KAAK,SAACC,GACnB,OACE,gCACE,+BACE,mBAAGC,KAAMD,EAAOE,IAAhB,SACE,6BACGF,EAAOG,YAId,uCAAS,iCAASH,EAAOI,YACzB,oDAAuBJ,EAAOK,eAC9B,2DAA8BL,EAAOM,sBACrC,+CAAkBN,EAAOO,UACzB,+BACE,wBAAQC,KAAK,SAASC,QAAS,kBAAMX,EAAmBE,IAAxD,sBAIF,uBAAK,yBAjBGA,EAAOU,SCMRC,EATA,SAAC,GAAsB,EAArBC,MAAsB,IAAfC,EAAc,EAAdA,SACtB,OACE,gCACE,uBAAOC,QAAQ,SAAf,sBACA,uBAAON,KAAK,OAAOE,GAAG,SAASK,SAAUF,QCAzCG,EAAe,CACnB,CACEN,GAAI,EACJP,MAAO,+DACPC,OAAQ,+BACRC,YAAa,KACbC,mBAAoB,IACpBC,OAAQ,IACRL,IAAK,+DAEP,CACEQ,GAAI,EACJP,MAAO,0BACPC,OAAQ,iBACRC,YAAa,KACbC,mBAAoB,IACpBC,OAAQ,IACRL,IAAK,kEAEP,CACEQ,GAAI,EACJP,MAAO,2DACPC,OAAQ,cACRC,YAAa,GACbC,mBAAoB,IACpBC,OAAQ,IACRL,IAAK,2EAIHe,EAAiB,SAACC,EAAOC,GAC7B,OAAOA,EAAOX,MACZ,IAAK,cACH,OAAOW,EAAOC,QAChB,IAAK,gBACH,OAAOF,EAAMG,QACX,SAAArB,GAAM,OAAImB,EAAOC,QAAQV,KAAOV,EAAOU,MAE3C,QACE,MAAM,IAAIY,QAsEDC,EAlEH,WAAO,IAAD,EACoBC,mBAClCC,aAAaC,QAAQ,eAAiB,IAFxB,mBACTC,EADS,KACGC,EADH,OAKmBC,qBAAWZ,EAAgB,IAL9C,mBAKTpB,EALS,KAKAiC,EALA,OAMkBN,oBAAS,GAN3B,mBAMTO,EANS,KAMEC,EANF,KAQVC,EAAkBpC,EAAQwB,QAAQ,SAACrB,GACvC,OAAOA,EAAOG,MAAM+B,SAASP,IAAe3B,EAAOI,OAAO8B,SAASP,MAuCrE,OAhBAQ,qBAAU,WACRV,aAAaW,QAAQ,aAAcT,KAClC,CAACA,IAEJQ,qBAAU,WACRH,GAAa,GAbb,IAAIK,SAAQ,SAAAC,GAAO,OACjBC,YAAY,kBACVD,EAAQ,CACNzC,QAASmB,MACP,QAUUwB,MAAM,SAACC,GACvBX,EAAgB,CACdtB,KAAM,cACNY,QAASqB,EAAO5C,UAGlBmC,GAAa,QAEd,IAGD,gCACE,iDACA,uBAEA,cAAC,EAAD,CAAQpB,MAAOe,EAAYd,SAzCV,SAAC6B,GACpBd,EAAcc,EAAMC,OAAO/B,UA0CxBmB,EACC,oDAEA,cAAC,EAAD,CAAalC,QAASoC,EAAiBnC,mBA1ClB,SAACE,GAC1B8B,EAAgB,CACdtB,KAAM,gBACNY,QAASpB,WCxDA4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.04464a1c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst CoursesList = ({courses, handleRemoveCourse}) => {\r\n  return courses.map( (course) => {\r\n    return (\r\n      <div key={course.id}>\r\n        <span>\r\n          <a href={course.url}>\r\n            <h4>\r\n              {course.title}\r\n            </h4>\r\n          </a>\r\n        </span>\r\n        <span>by <strong>{course.author}</strong></span>\r\n        <span> | Video Hours: {course.hours_video}</span>\r\n        <span> | Number of Lectures: {course.number_of_lectures}</span>\r\n        <span> | Rating: {course.rating}</span>\r\n        <span>\r\n          <button type=\"button\" onClick={() => handleRemoveCourse(course)}>\r\n            Remove\r\n          </button>\r\n        </span>\r\n        <br/><br/>\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default CoursesList;","import React from 'react';\r\n\r\nconst Search = ({value, onSearch}) => {\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"search\">Search: </label>\r\n      <input type=\"text\" id=\"search\" onChange={onSearch}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Search;","import React, { useState, useEffect, useReducer } from 'react';\r\nimport './App.css';\r\n\r\nimport CoursesList from './CoursesList';\r\nimport Search from './Search';\r\n\r\nconst courses_data = [\r\n  {\r\n    id: 1,\r\n    title: \"React - The Complete Guide (incl Hooks, React Router, Redux)\",\r\n    author: \"Maximilian SchwarzmÃ¼lller\",\r\n    hours_video: 40.5,\r\n    number_of_lectures: 490,\r\n    rating: 4.6,\r\n    url: \"https://codingthesmartway.com/courses/react-complete-guide/\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Modern React with Redux\",\r\n    author: \"Stephen Grider\",\r\n    hours_video: 47.5,\r\n    number_of_lectures: 488,\r\n    rating: 4.6,\r\n    url: \"https://codingthesmartway.com/courses/modern-react-with-redux/\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"The Complete React Developer Course (w/ Hooks and Redux)\",\r\n    author: \"Andrew Mead\",\r\n    hours_video: 39,\r\n    number_of_lectures: 200,\r\n    rating: 4.7,\r\n    url: \"http://codingthesmartway.net/courses/complete-react-web-app-developer/\"\r\n  }\r\n];\r\n\r\nconst coursesReducer = (state, action) => {\r\n  switch(action.type) {\r\n    case 'SET_COURSES':\r\n      return action.payload;\r\n    case 'REMOVE_COURSE':\r\n      return state.filter(\r\n        course => action.payload.id !== course.id\r\n      );\r\n    default:\r\n      throw new Error();\r\n  }\r\n};\r\n\r\nconst App = () => {\r\n  const [searchText, setSearchText] = useState(\r\n    localStorage.getItem('searchText') || ''\r\n  );\r\n  // const [courses, setCourses] = useState([]);\r\n  const [courses, dispatchCourses] = useReducer(coursesReducer, []);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const filteredCourses = courses.filter( (course) => {\r\n    return course.title.includes(searchText) || course.author.includes(searchText);\r\n  });\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchText(event.target.value);\r\n  }\r\n\r\n  const handleRemoveCourse = (course) => {\r\n    dispatchCourses({\r\n      type: 'REMOVE_COURSE',\r\n      payload: course\r\n    });\r\n  }\r\n\r\n  const getCoursesAsync = () =>\r\n    new Promise(resolve =>\r\n      setTimeout( () =>\r\n        resolve({\r\n          courses: courses_data\r\n        }), 2000\r\n      )\r\n    );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('searchText', searchText);\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    getCoursesAsync().then( (result) => {\r\n      dispatchCourses({\r\n        type: 'SET_COURSES',\r\n        payload: result.courses\r\n      });\r\n      // setCourses(result.courses);\r\n      setIsLoading(false);\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Courses</h1>\r\n      <hr/>\r\n\r\n      <Search value={searchText} onSearch={handleSearch} />\r\n\r\n      {isLoading ? (\r\n        <p>Loading Courses ...</p>\r\n      ) : (\r\n        <CoursesList courses={filteredCourses} handleRemoveCourse={handleRemoveCourse}/>\r\n      )}\r\n\r\n      {/* <CoursesList courses={filteredCourses} /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}